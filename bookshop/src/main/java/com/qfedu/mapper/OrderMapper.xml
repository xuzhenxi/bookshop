<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 命名空间 ，唯一-->
<mapper namespace="com.qfedu.dao.IOrderDao">
	

	<!-- 查询到的数据和实体类之间的映射关系 -->
	<!-- type 实体类 包名+类名 -->
	<resultMap type="Order" id="orderMap">
		<id property="oid" column="oid"/>
		<result property="userName" column="userName"/>
		
	</resultMap>

	<resultMap type="Order" id="orderMaps">
		<id property="oid" column="oid"/>
		<result property="userName" column="userName"/>
		<result property="money" column="money"/>
		<result property="ostatus" column="ostatus"/>
		<result property="ocreateDate" column="ocreateDate"/>
		
		<collection property="items"
			javaType="java.util.ArrayList"
			ofType="com.qfedu.entity.Items"
			resultMap="com.qfedu.dao.IItemsDao.itemsMap">
			
			
		</collection>
		
		
	</resultMap>
	
	<insert id="add" parameterType="Order">
		<selectKey keyProperty="oid" order="AFTER" resultType="int">
			select @@identity
		</selectKey>
	
		insert into orders(username, money, ostatus, ocreateDate) value(#{userName}, #{money}, #{ostatus}, #{ocreateDate});
	</insert>
	
	<select id="findByUserName" parameterType="string" resultMap="orderMaps">
		select o.*, i.*, b.* from orders o
		inner join items i 
		on o.oid=i.oid
		inner join books b
		on b.bid=i.bid
		where o.username=#{username}
		
	</select>
	
	<select id="count" resultType="int">
		select count(1) from books
	</select>
	
	<select id="findByIndexAndSize" parameterType="map" resultType="Order">
		select o.*, i.* from orders o
		inner join items i 
		on o.oid=i.oid
		where o.username=#{username}
		
	</select>
	
	
</mapper>
